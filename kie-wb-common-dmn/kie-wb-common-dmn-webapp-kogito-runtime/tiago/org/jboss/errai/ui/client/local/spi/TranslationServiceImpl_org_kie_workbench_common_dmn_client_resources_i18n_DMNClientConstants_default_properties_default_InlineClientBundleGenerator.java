package org.jboss.errai.ui.client.local.spi;

import com.google.gwt.core.client.GWT;
import com.google.gwt.resources.client.ResourcePrototype;

public class TranslationServiceImpl_org_kie_workbench_common_dmn_client_resources_i18n_DMNClientConstants_default_properties_default_InlineClientBundleGenerator implements org.jboss.errai.ui.client.local.spi.TranslationServiceImpl.org_kie_workbench_common_dmn_client_resources_i18n_DMNClientConstants_default_properties {
  private static TranslationServiceImpl_org_kie_workbench_common_dmn_client_resources_i18n_DMNClientConstants_default_properties_default_InlineClientBundleGenerator _instance0 = new TranslationServiceImpl_org_kie_workbench_common_dmn_client_resources_i18n_DMNClientConstants_default_properties_default_InlineClientBundleGenerator();
  private void getContentsInitializer() {
    getContents = new com.google.gwt.resources.client.TextResource() {
      // jar:file:/Users/tiagobento/redhat/kiegroup-all/kie-wb-common/kie-wb-common-dmn/kie-wb-common-dmn-client/target/kie-wb-common-dmn-client-7.47.0-SNAPSHOT.jar!/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants_default.properties
      public String getText() {
        StringBuilder builder = new StringBuilder();
        builder.append("#\n# Copyright 2017 Red Hat, Inc. and/or its affiliates.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nExpressionEditor.ReturnToLink=Back to {0}\nExpressionEditor.ExpressionTypeText=({0})\nExpressionEditor.UndefinedExpressionType=Undefined\nExpressionEditor.LiteralExpressionType=Literal expression\nExpressionEditor.ContextExpressionType=Context\nExpressionEditor.DecisionTableExpressionType=Decision Table\nExpressionEditor.RelationType=Relation\nExpressionEditor.FunctionType=Function\nExpressionEditor.PMMLFunctionType=PMML Function\nExpressionEditor.JavaFunctionType=Java Function\nExpressionEditor.InvocationType=Invocation\nExpressionEditor.ListType=List\nExpressionEditor.Clear=Clear\nLiteralExpression.EditExpression=Edit Expression\nContextEditor.Header=Context Entry\nContextEditor.InsertContextEntry=Insert\nContextEditor.InsertContextEntryAbove=Insert above\nContextEditor.InsertContextEntryBelow=Insert below\nContextEditor.DeleteContextEntry=Delete\nContextEditor.EditExpression=Edit Expression\nContextEditor.EditContextEntry=Edit Context Entry\nRelationEditor.HeaderRows=Rows\nRelationEditor.InsertRowAbove=Insert above\nRelationEditor.InsertRowBelow=Insert below\nRelationEditor.DeleteRow=Delete\nRelationEditor.HeaderColumns=Columns\nRelationEditor.InsertColumnLeft=Insert left\nRelationEditor.InsertColumnRight=Insert right\nRelationEditor.DeleteColumn=Delete\nRelationEditor.EditRelation=Edit Relation\nInvocationEditor.Header=Parameters\nInvocationEditor.InsertParameter=Insert\nInvocationEditor.InsertParameterAbove=Insert above\nInvocationEditor.InsertParameterBelow=Insert below\nInvocationEditor.DeleteParameter=Delete\nInvocationEditor.EditExpression=Edit Expression\nInvocationEditor.EditParameter=Edit Parameter\nInvocationEditor.EnterFunction=Enter function\nListEditor.HeaderRows=Rows\nListEditor.InsertRowAbove=Insert above\nListEditor.InsertRowBelow=Insert below\nListEditor.DeleteRow=Delete\nListEditor.EditExpression=Edit List\nFunctionEditor.FEEL=FEEL\nFunctionEditor.JAVA=JAVA\nFunctionEditor.PMML=PMML\nFunctionEditor.Undefined=<Undefined>\nFunctionEditor.EditExpression=Edit Expression\nFunctionEditor.EditParameters=Edit parameters\nFunctionEditor.EditParametersTitle=Edit Parameters\nFunctionEditor.SelectFunctionKind=Select Function Kind\nParametersPopoverViewImpl.addParameter=Add parameter\nDecisionTableEditor.InsertRuleAnnotationClauseLeft=Insert left\nDecisionTableEditor.InsertRuleAnnotationClauseRight=Insert right\nDecisionTableEditor.DeleteRuleAnnotationClause=Delete\nDecisionTableEditor.RuleAnnotationClauseHeader=Rule Annotation\nDecisionTableEditor.SelectRuleAnnotationName=Rule Annotation Name\nDecisionTableEditor.DescriptionColumnHeader=Description\nDecisionTableEditor.InputClauseHeader=Input clause\nDecisionTableEditor.InsertInputClauseLeft=Insert left\nDecisionTableEditor.InsertInputClauseRight=Insert right\nDecisionTableEditor.DeleteInputClause=Delete\nDecisionTableEditor.OutputClauseHeader=Output clause\nDecisionTableEditor.InsertOutputClauseLeft=Insert left\nDecisionTableEditor.InsertOutputClauseRight=Insert right\nDecisionTableEditor.DeleteOutputClause=Delete\nDecisionTableEditor.DecisionRuleHeader=Decision Rule\nDecisionTableEditor.InsertDecisionRuleAbove=Insert above\nDecisionTableEditor.InsertDecisionRuleBelow=Insert below\nDecisionTableEditor.DeleteDecisionRule=Delete\nDecisionTableEditor.DuplicateDecisionRule=Duplicate\nDecisionTableEditor.NullBuiltinAggregator=<None>\nDecisionTableEditor.EditHitPolicy=Edit Hit Policy\nDecisionTableEditor.EditInputClause=Edit Input Clause\nDecisionTableEditor.EditOutputClause=Edit Output Clause\nDecisionTableEditor.HitPolicyLabel=Hit Policy\nDecisionTableEditor.BuiltinAggregatorLabel=Builtin Aggregator\nDecisionTableEditor.EnterAnnotation=Enter Text\nDecisionTableEditor.InputClauseColumnHeaderMetaData.ValueLabel=Expression\nUndefinedExpressionEditor.SelectorTitle=Select logic type\nUndefinedExpressionEditor.SelectExpression=Select expression\nDecisionNavigatorPresenter.DecisionNavigator=Decision Navigator\nDecisionNavigatorBaseItemFactory.NoName=- No Name -\nTypePickerWidget.Choose=Choose...\nTypePickerWidget.Manage=Manage\nDataTypeManager.None=Insert a name\nDataTypeManager.Structure=Structure\nDataTypeModalView.Header=Manage Custom Data Types\nDataTypeModalView.Cancel=Cancel\nDataTypeModalView.Save=Save\nDataTypeSelectView.DefaultTitle=Default\nDataTypeSelectView.CustomTitle=Custom\nDataTypeTreeGridView.AttributeName=Attribute Name\nDataTypeTreeGridView.Type=Type\nDataTypeTreeGridView.Required=(* Required)\nDataTypeListItemView.Name=Name\nDataTypeListItemView.Type=Type\nDataTypeListItemView.ArrowKeysTooltip=Use arrow keys to navigate through Data Types\nDataTypeListView.Title=Custom Data Types\nDataTypeListView.NoCustomDataTitle=No custom data types have been defined.\nDataTypeListView.NoCustomData1=Data types are referenced in the input and output values for decision tables. Custom data types allow you to reference more complex data types, beyond the simple \"default\" types.\nDataTypeListView.NoCustomData2=Currently, there are no custom data types available for you to view or edit. To get started, add a custom data type.\nDataTypeListView.AddACustomDataType=Add a custom Data Type\nDataTypeListView.NoCustomDataTypesFound1=No custom Data Types found.\nDataTypeListView.NoCustomDataTypesFound2=Try a different Data Type name.\nDataTypeListView.NewDataType=New Data Type\nDataTypeListView.ExpandAll=Expand all\nDataTypeListView.CollapseAll=Collapse all\nDataTypeListView.ReadOnlyMessage1=This list contains Data Types on read-only mode.\nDataTypeListView.ReadOnlyMessage2=You can edit them by opening the original file.\nDataTypeListView.ImportDataObject=Import Data Object\nNameAndDataTypePopover.NameLabel=Name\nNameAndDataTypePopover.DataTypeLabel=Data Type\nDataTypeNameIsBlankErrorMessage.StrongMessage=The Data Type name cannot be blank.\nDataTypeNameIsBlankErrorMessage.RegularMessage=Enter a Data Type name.\nDataTypeNameIsInvalidErrorMessage.StrongMessage=The Data Type name must start with a letter, ?, or _ and cannot start with a language keyword, such as and, true, or every.\nDataTypeNameIsInvalidErrorMessage.RegularMessage=Use a different Data Type name.\nDataTypeNameIsNotUniqueErrorMessage.StrongMessage=A Data Type \"{0}\" already exists.\nDataTypeNameIsNotUniqueErrorMessage.RegularMessage=Use a different Data Type name.\nDataTypeWithFieldsWarningMessage.StrongMessage=All fields that are part of this structure will be removed as a result of this change.\nDataTypeWithFieldsWarningMessage.RegularMessage=Are you sure you want to change this Data Type?\nReferencedDataTypeWarningMessage.StrongMessage=All Data Types with the \"{0}\" type will be removed.\nReferencedDataTypeWarningMessage.RegularMessage=Are you sure you want to remove this Data Type?\nDataTypeNameIsDefaultTypeMessage.StrongMessage=The Data Type name cannot be a default type.\nDataTypeNameIsDefaultTypeMessage.RegularMessage=Use a different Data Type name.\nDataTypeSuccessfullyImportedMessage.RegularMessage=The Data Object (Java class) was successfully converted to a DMN Data Type and imported.\nFlashMessagesView.Ok=OK\nFlashMessagesView.Cancel=Cancel\nDataTypeListItemView.Constraints=Constraints: {0}\nDataTypeListItemView.List=List\nDataTypeListItemView.Yes=Yes\nDataTypeListItemView.Edit=Edit (Ctrl + E)\nDataTypeListItemView.Save=Save (Ctrl + S)\nDataTypeListItemView.AddRowBelow=Add row below (Ctrl + B)\nDataTypeListItemView.Remove=Remove (Ctrl + Backspace)\nDataTypeListItemView.Cancel=Cancel (Esc)\nDataTypesPage.Title=Data Types\nIncludedModelsPage.Title=Included Models\nDataTypeSearchBarView.Search=Search data types\nDataTypeConstraintView.AddConstraints=Add Constraints\nDataTypeConstraintView.ConstraintsTooltip=Add constraints to limit and define valid input for the data type\nDataTypeConstraintModalView.BodyParagraph1=Add constraints to limit and define valid input for the \nDataTypeConstraintModalView.BodyParagraph2=data type.\nDataTypeConstraintModalView.BodyParagraph3=Select constraint type\nDataTypeConstraintModalView.Header=Data Type constraints\nDataTypeConstraintModalView.Select=Select\nDataTypeConstraintModalView.Enumeration=Enumeration\nDataTypeConstraintModalView.Expression=Expression\nDataTypeConstraintModalView.Range=Range\nDataTypeConstraintModalView.ClearAll=Clear all\nDataTypeConstraintModalView.Ok=OK\nDataTypeConstraintModalView.Cancel=Cancel\nDataTypeConstraintModalView.SelectConstraintType=Select a constraint type\nDataTypeConstraintExpressionView.ForSyntaxRequirements=For syntax requirements of your constraint expressions, see the\nDataTypeConstraintExpressionView.DMNSpecification=DMN specification\nDataTypeConstraintExpressionView.Placeholder=Enter a valid expression\nDataTypeConstraintEnumerationView.Add=Add\nDataTypeConstraintEnumerationItemView.Edit=Edit\nDataTypeConstraintEnumerationItemView.Remove=Remove\nDataTypeConstraintEnumerationItemView.MoveUp=Move up\nDataTypeConstraintEnumerationItemView.MoveDown=Move down\nDataTypeConstraintEnumerationItemView.None=- None -\nDataTypeConstraintModalView.StrongWarningParserMessage=The current constraint could not be parsed.\nDataTypeConstraintModalView.RegularWarningParserMessage=Set a valid constraint.\nDataTypeConstraintRangeView.StartValue=Start value\nDataTypeConstraintRangeView.EndValue=End value\nDataTypeConstraintRangeView.IncludeStartValue=Include start value\nDataTypeConstraintRangeView.IncludeEndValue=Include end value\nDataTypeConstraintRangeView.RequiredValue=* A range has a start and an end value, both field values are required.\nDataTypeConstraintRangeView.ProTip=The value at each end of the range may be included or excluded from the range definition. If the check box is cleared, the start or end value is excluded.\nConstraintPlaceholderHelper.SentenceDate=Example expression for a \"date\" data type: (date(\"2019-02-01\")..date(\"2019-02-28\"))\nConstraintPlaceholderHelper.SentenceNumber=Example expression for a \"number\" data type: (1..10)\nConstraintPlaceholderHelper.SentenceString=Example expression for a \"string\" data type: \"apple\",\"orange\",\"pineapple\"\nConstraintPlaceholderHelper.SentenceDayTimeDuration=Example expression for a \"days and time duration\" data type (where PT10S represents 10 seconds and PT30M represents 30 minutes): (duration(\"PT10S\")..duration(\"PT30M\"))\nConstraintPlaceholderHelper.SentenceYearMonthDuration=Example expression for a \"years and months duration\" data type (where P2M represents 2 months and P2Y represents 2 years): (duration(\"P2M\")..duration(\"P2Y\"))\nConstraintPlaceholderHelper.SentenceTime=Example expression for a \"time\" data type: (time(\"16:00\")..time(\"16:30\"))\nConstraintPlaceholderHelper.SentenceDateTime=Example expression for a \"date and time\" data type: (date and time(\"2019-02-01T16:00\")..date and time(\"2019-02-28T17:00\"))\nConstraintPlaceholderHelper.SentenceDefault=Enter a valid expression\nConstraintPlaceholderHelper.SampleDate=Select date\nConstraintPlaceholderHelper.SampleNumber=Insert a number\nConstraintPlaceholderHelper.SampleString=Insert a string\nConstraintPlaceholderHelper.SampleDayTimeDuration=duration(\"PT10S\")\nConstraintPlaceholderHelper.SampleYearMonthDuration=Enter a value\nConstraintPlaceholderHelper.SampleTime=Insert a time\nConstraintPlaceholderHelper.SampleDateTime=time(\"2019-02-28T17:00\")\nConstraintPlaceholderHelper.SampleDefault=Insert a value\nIncludedModelsPageView.Title=Included Models\nIncludedModelsPageView.Description=Included models are externally defined models that have been added to this DMN file. External DMN models have their decision requirements diagram or graph components available to this DMN file. External PMML models can be invoked through DMN functions.\nIncludedModelsPageView.IncludeModel=Include Model\nDMNCardComponentContentView.Remove=Remove\nPMMLCardComponentContentView.Remove=Remove\nDefaultCardComponentContentView.Remove=Remove\nIncludedModelNameIsNotUniqueErrorMessage.StrongMessage=The model \"{0}\" already exists.\nIncludedModelNameIsNotUniqueErrorMessage.RegularMessage=Use a different model name.\nIncludedModelNameIsBlankErrorMessage.StrongMessage=The model name cannot be blank.\nIncludedModelNameIsBlankErrorMessage.RegularMessage=Enter a model name.\nDMNCardsEmptyStateView.Title=No external models have been included.\nDMNCardsEmptyStateView.Subtitle=To add an external model to this DMN file, click Include Model.\nYearsMonthsSelectorView.Months=months\nYearsMonthsSelectorView.Years=years\nYearsMonthsSelectorView.MonthsAbbreviated=mos\nYearsMonthsSelectorView.YearsAbbreviated=yrs\nDayTimeValueConverter.Days=days\nDayTimeValueConverter.Hours=hours\nDayTimeValueConverter.Minutes=minutes\nDayTimeValueConverter.Seconds=seconds\nDayTimeValueConverter.Day=day\nDayTimeValueConverter.Hour=hour\nDayTimeValueConverter.Minute=minute\nDayTimeValueConverter.Second=second\nDayTimeSelectorView.Days=days\nDayTimeSelectorView.Hours=hours\nDayTimeSelectorView.Minutes=minutes\nDayTimeSelectorView.Seconds=seconds\nTimeSelectorView.None=None\nTimeSelectorView.SelectTimeZone=Select timezone\nTimeSelectorView.SelectUTCOffset=Select UTC offset\nIncludedModelModalView.Header=Include model\nIncludedModelModalView.Description=Models that have been added to the project directory may be included in this DMN file. Decision requirements diagram components of included DMN models will be available to use in this DMN file. PMML models will be available for invocation through DMN functions.\nIncludedModelModalView.DMNModelsLabel=Models\nIncludedModelModalView.UniqueNameLabel=Provide a unique name\nIncludedModelModalView.Include=Include\nIncludedModelModalView.Cancel=Cancel\nDecisionComponentsView.FilterBy=Filter by\nDecisionComponentsView.Decision=Decision\nDecisionComponentsView.BusinessKnowledgeModel=Business knowledge model\nDecisionComponentsView.InputData=Input data\nDecisionComponentsView.DecisionService=Decision service\nDecisionComponentsView.KnowledgeSource=Knowledge source\nDecisionComponentsView.AllIncludedComponents=All included components\nDecisionComponentsView.EnterText=Enter text\nDecisionComponentsView.EmptyStateTitle=No external models have been included.\nDecisionComponentsView.EmptyStateDescription=To add an external model to this DMN file, go to the Include Models tab and include a model.\nDecisionNavigatorView.DecisionGraphs=Decision Graphs\nDecisionNavigatorView.DecisionComponents=Decision Components\nDecisionComponentsItemView.DuplicatedNode=This external component is already present in this DMN file and can not be added again.\nLiteralExpressionPMMLDocumentEditorDefinition.Placeholder=First select PMML document\nLiteralExpressionPMMLDocumentModelEditorDefinition.Placeholder=Second select PMML model\nDMNDocumentationI18n.DmnModelDocumentation=DMN Model Documentation\nDMNDocumentationI18n.GeneratedOn=Generated on:\nDMNDocumentationI18n.GeneratedBy=Generated by:\nDMNDocumentationI18n.GeneratedFrom=Generated from:\nDMNDocumentationI18n.Namespace=Namespace:\nDMNDocumentationI18n.TableOfContents=Table of Contents\nDMNDocumentationI18n.DmnModel=DMN model\nDMNDocumentationI18n.DataTypes=Data Types\nDMNDocumentationI18n.DrdComponents=DRD components\nDMNDocumentationI18n.NoDataTypes=No data types.\nDMNDocumentationI18n.NoExternalLinks=No related links.\nDMNDocumentationI18n.ExternalLinks=Related links:\nDMNDocumentationI18n.NoDRDs=No DRD components.\nDMNDocumentationI18n.DiagramDoesNotHaveElements=The diagram does not have any element.\nDMNDocumentationI18n.Add=Add\nDMNDocumentationI18n.None=None\nDMNDocumentationI18n.Name=Name Attachment\nDMNDocumentationI18n.URL=URL\nDMNDocumentationI18n.NamePlaceholder=Enter\nDMNDocumentationI18n.URLPlaceholder=https://\nDMNDocumentationI18n.Ok=OK\nDMNDocumentationI18n.Cancel=Cancel\nDMNDocumentationI18n.AttachmentTip=.pdf, .doc, .jpeg, .xls\nDMNDocumentationFactory.Constraints=Constraints:\nDMNDocumentationFactory.ListYes=List: Yes\nDMNDocumentationFactory.Structure=Structure\nDMNDocumentationView.Print=Print\nDMNPreviewDiagramDock.Title=Explore diagram\nDMNDocumentationView.DownloadHtmlFile=Download .HTML file\nImportDataObjectModalView.Header=Import");
        builder.append(" Data Object\nImportDataObjectModalView.Note=Note:\nImportDataObjectModalView.NoteText=This action is a one time import. If the Data Object is updated you will need to reimport it to have the changes reflected in the respective data type.\nImportDataObjectModalView.Cancel=Cancel\nImportDataObjectModalView.Import=Import\nImportDataObjectModalView.ClearSelection=Clear selection\nImportDataObjectModalView.ProjectDataObjects=Project Data Objects\nImportDataObjectModalView.DataTypeWithSameNameFound=A DMN Data Type with the same name already exists! If you proceed it will be overwritten.\nDRDActions.ContextMenu.Title=DRD Actions\nDRDActions.ContextMenu.Actions.Create=Create\nDRDActions.ContextMenu.Actions.AddTo=Add to\nDRDActions.ContextMenu.Actions.Remove=Remove\nDRDNameChangerView.ReturnToDRGMessage=View DRG\nDRDNameChangerView.DRDDescriptionMessage=(Decision Requirements Diagram)\n");
        return builder.toString();
      }
      public String getName() {
        return "getContents";
      }
    }
    ;
  }
  private static class getContentsInitializer {
    static {
      _instance0.getContentsInitializer();
    }
    static com.google.gwt.resources.client.TextResource get() {
      return getContents;
    }
  }
  public com.google.gwt.resources.client.TextResource getContents() {
    return getContentsInitializer.get();
  }
  private static java.util.HashMap<java.lang.String, com.google.gwt.resources.client.ResourcePrototype> resourceMap;
  private static com.google.gwt.resources.client.TextResource getContents;
  
  public ResourcePrototype[] getResources() {
    return new ResourcePrototype[] {
      getContents(), 
    };
  }
  public ResourcePrototype getResource(String name) {
    if (GWT.isScript()) {
      return getResourceNative(name);
    } else {
      if (resourceMap == null) {
        resourceMap = new java.util.HashMap<java.lang.String, com.google.gwt.resources.client.ResourcePrototype>();
        resourceMap.put("getContents", getContents());
      }
      return resourceMap.get(name);
    }
  }
  private native ResourcePrototype getResourceNative(String name) /*-{
    switch (name) {
      case 'getContents': return this.@org.jboss.errai.ui.client.local.spi.TranslationServiceImpl.org_kie_workbench_common_dmn_client_resources_i18n_DMNClientConstants_default_properties::getContents()();
    }
    return null;
  }-*/;
}
